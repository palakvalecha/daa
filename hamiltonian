int g[10][10], x[10], n;

void
NextValue (int k)
{
  int j, flag;
  while (1)
    {
      x[k] = (x[k] + 1) % (n + 1);
      if (x[k] == 0)
	break;
      if ((g[x[k - 1], x[k]])== 1)
	{
	  flag = 1;
	  for (j = 1; j <= k - 1; j++)
	    {
	      if (x[k] == x[j])
		{
		  flag = 0;
		  break;
		}
	    }

	  if (flag = 1)
	    if ((k < n) || ((k == n) && (g[x[n], x[1]] == 1)))
	      break;
	}
    }
}

void Hamiltonian(int k)
{
  int i;
  while (1)
    {
      NextValue (k);
      if (x[k] == 0)
	break;
      if (k == n)
	{
	  for (i = 1; i <= n; i++)
	    printf ("%d", x[i]);
	}
      else
	Hamiltonian(k + 1);
    }
}

void
gread ()
{
  int i, j;
  printf ("no. of vertices");
  scanf ("%d", &n);
  for (i = 1; i <= n; i++)
    {
      for (j = 1; j <= n; j++)
	g[i][j] = 0;
    }
  for (i = 1; i <= n; i++)
    {
      printf ("enter the vertices adjacent from%d", i);
      scanf ("%d", &j);
      while (j != -1)
	{
	  g[i][j] = g[j][i] = 1;
	  scanf ("%d", &j);
	}
    }
}

void
main ()
{
  int i;
  gread ();
  for (i = 2; i <= n; i++)
    x[i] = 0;
  Hamiltonian(2);
}
